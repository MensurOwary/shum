// If we list all the natural numbers below 10 that are multiples of 3 or 5,
// we get 3, 5, 6 and 9. The sum of these multiples is 23.
// Find the sum of all the multiples of 3 or 5 below 1000.
// Link: https://projecteuler.net/problem=1

////////////////////////////////////////////////////
/// PURE STACK BASED SOLUTION
////////////////////////////////////////////////////
0 // sum 
3 // starting from
loop dup 1000 < do
    dup                             // [sum, num, num]
    dup 5 % 0 ==                    // [sum, num, num, true/false]
    swap                            // [sum, num, true/false, num]
    3 % 0 ==                        // [sum, num, true/false, true/false]
    or if                           // [sum, num, true/false]
        dup                         // [sum, num, num]
    else                    
        0                           // [sum, num, num]
    end     
    dup2over1 drop drop             // [num, num, sum]
    +                               // [num, num + sum]
    swap                            // [sum + num, num]
    1 +                             // [sum + num, num + 1]
end 
drop    // drop the number which is 1000
print   // print the sum

////////////////////////////////////////////////////
/// USING VARIABLES
////////////////////////////////////////////////////
let start:int
3 start!

let sum:int
0 sum!

loop start@ 1000 < do
    start@ 5 % 0 ==
    start@ 3 % 0 ==
    or if
        start@ sum@ + sum!
    else end
    start@ 1 + start!
end

sum@ print

////////////////////////////////////////////////////
/// MATH solution
////////////////////////////////////////////////////

func sumTill int -> int = dup 1 + * 2 / end

macro euler = 
    333 sumTill 3 *
    199 sumTill 5 *
    +
    66 sumTill 15 *
    -
    print
end

euler